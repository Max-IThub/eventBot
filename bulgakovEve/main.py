import logging
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import random
import string
import urllib.parse
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)

updater = Updater(token='5875098846:AAEJJsE24iKLC_Dk6H_Btd-gVRm_09UKi8k', use_context=True)

dispatcher = updater.dispatcher

admin_ids = ["453456091"]

promo_codes = {}

task_counter = {}

def start(update, context):
    update.message.reply_text('üëæ–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É!üëæ')

def about(update, context):
    update.message.reply_text('–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã - –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è –∏ –ø—Ä–∏—Å—ã–ª–∞–π –º–Ω–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã –æ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤!üëæüëæüëæ')

def generate_promo_code():
    promo_code = ''.join(random.choices(string.ascii_letters + string.digits, k=10))
    return promo_code

def gen_promo(update, context):
    user_id = str(update.message.chat_id)
    if user_id in admin_ids:
        promo_code = generate_promo_code()
        promo_codes[promo_code] = False
        update.message.reply_text(f"{promo_code}")
    else:
        update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.ü§Ø")

def handle_message(update, context):
    user_id = str(update.message.chat_id)
    message_text = update.message.text
    if message_text in promo_codes and not promo_codes[message_text]:
        promo_codes[message_text] = True
        if user_id in task_counter:
            task_counter[user_id] += 1
        else:
            task_counter[user_id] = 1
        update.message.reply_text(f"–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ {task_counter[user_id]} –∑–∞–¥–∞–Ω–∏–π.")
    else:
        update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥.ü§Ø")

def get_stat(update, context):
    if str(update.message.chat_id) in admin_ids:
        stats = []
        for user_id, count in task_counter.items():
            user_link = f"@{context.bot.get_chat(user_id).username}" 
            stats.append(f"–£—á–∞—Å—Ç–Ω–∏–∫: {user_link}, –í—ã–ø–æ–ª–Ω–∏–ª: {count} –∑–∞–¥–∞–Ω–∏–π")
        if stats:
            update.message.reply_text("\n".join(stats))
        else:
            update.message.reply_text("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É—Å—Ç–∞.")
    else:
        update.message.reply_text("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.ü§Ø")

def danger_delete(update, context):
    if str(update.message.chat_id) in admin_ids:
        task_counter.clear()
        promo_codes.clear()
        update.message.reply_text('–í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã.')
    else:
        update.message.reply_text('ACCESS DENIED!!! –û–ë–ù–ê–†–£–ñ–ï–ù –î–ò–í–ï–†–°–ê–ù–¢!!!ü§Ø')


dispatcher.add_handler(CommandHandler('start', start))
dispatcher.add_handler(CommandHandler('about', about))
dispatcher.add_handler(CommandHandler('gen_promo', gen_promo))
dispatcher.add_handler(CommandHandler('get_stat', get_stat))
dispatcher.add_handler(CommandHandler('DangerDeleteEverythingNow', danger_delete))
dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

updater.start_polling()
